/* 
CREATED BY: Mike Cwikielnik
CREATED ON: 5/3/22
DESCRIPTION: Chapter 7 
*/

-- ADDING CALCULATIONS TO YOUR QUERIES

SELECT
	Count(LASTNAME) [NAME COUNT]
FROM
	customers
WHERE
	LastName LIKE 'B%'
	
-- MANIPULATING TEXT DATA WITH STRING FUNCTIONS

SELECT
	FirstName,
	LastName,
	Address
FROM
	customers
WHERE
	Country = 'USA'
	
-- CONCATENATING STRINGS OF TEXT

SELECT
	FirstName || LastName
FROM
	customers
WHERE
	CustomerId = 1
	
SELECT
	FirstName,
	LastName,
	FirstName ||' '|| LastName [FULL NAME]
FROM
	customers
WHERE
	Country = "USA"

SELECT
	FirstName ||' '|| LastName ||' '|| Address
	||', '|| City ||', '|| State ||' '||
	PostalCode AS [MAILING ADDRESS]
FROM
	customers
WHERE
	Country = "USA"
	
-- TRUNCATING TEXT

SELECT
	PostalCode,
	LENGTH(POSTALCODE) AS [POSTAL CODE LENGTH]
FROM
	customers
WHERE
	Country = "USA"

SELECT
	PostalCode,
	substr(POSTALCODE, 1, 5) AS [FIVE DIGIT POSTAL CODE]
FROM
	customers
WHERE
	Country = "USA"
	
-- ADDITIONAL STRING FUNCTIONS

SELECT
	FirstName AS [FIRST NAME ORIGINAL],
	UPPER(FIRSTNAME) [UPPER],
	LOWER(FIRSTNAME) [LOWER],
	UPPER(FIRSTNAME)||' '|| UPPER(LASTNAME) [FULL NAME]
FROM
	customers

-- DATE FUNCTIONS

SELECT
strftime('YEAR IS: %Y THE DAY IS: %d: THE MONTH IS: %m', '2022-05-03')
AS [TEXT WITH CONVERSION SPECIFICATIONS]

SELECT
	LastName,
	FirstName,
	strftime('%Y-%m-%d', BIRTHDATE) [BDAY],
	strftime('%Y-%m-%d', 'NOW') - strftime('%Y-%m-%d', BIRTHDATE) [AGE]
FROM
	employees
ORDER BY
	AGE

-- AGGREGATE FUNCTIONS

SELECT
	SUM(TOTAL) [TOTAL SALES]
FROM
	invoices

SELECT
	SUM(TOTAL),
	AVG(TOTAL),
	MAX(TOTAL),
	MIN(TOTAL),
	COUNT(*)
FROM
	invoices

-- NESTING FUNCTIONS WITH THE ROUND() FUNCTION

SELECT
	AVG(TOTAL) [AVG SALES],
	ROUND(AVG(TOTAL), 2) [ROUNDED AVG]
FROM
	invoices
	
-- USING AGGREGATE FUNCTIONS WITH THE GROUP BY CLAUSE

SELECT
	BillingCity,
	AVG(TOTAL)
FROM
	invoices
ORDER BY
	BillingCity
	
SELECT
	BillingCity,
	AVG(TOTAL)
FROM
	invoices
GROUP BY
	BillingCity
ORDER BY
	BillingCity
	
-- USING THE WHERE & HAVING CLAUSES WITH GROUPED QUERIES

SELECT
	BillingCity,
	AVG(TOTAL)
FROM
	invoices
WHERE
	BillingCity like 'L%'
GROUP BY
	BillingCity
ORDER BY
	BillingCity
	
SELECT
	BillingCity,
	AVG(TOTAL)
FROM
	invoices
GROUP BY
	BillingCity
HAVING
	AVG(TOTAL) > 5
ORDER BY 
	BillingCity
	
/* HAVING ALLOWS YOU TO USE AGGREGATES/INEQUALITIES */ 

-- THE WHERE CLAUSE VS THE HAVING CLAUSE

SELECT
	BillingCity,
	AVG(TOTAL)
FROM
	invoices
WHERE
	BillingCity LIKE 'B%'
GROUP BY
	BillingCity
HAVING
	AVG(TOTAL) > 5
ORDER BY
	BillingCity
	
/*
WHERE IS FOR FILTERING NON-AGGREGATE DATA
HAVING IS FOR FILTERING RESULTS CONTAINING AGGREGATES

THE WHERE CLAUSE TELLS TEH QUERY WHAT INFO TO INCLUDE FROM THE TABLE, THEN,
ONCE THE INFO IS FILTERED AND AGGREGATE FUNCTIONS ARE APPLIED TO THE FIELDS

HAVING CLAUSE ACTS AS A FURTHER FILTER FOR THE AGGREGATED DATA. 

THIS FILTERING STEP IS PERFORMED BEFORE THE HAVING & ORDERED BY CLAUSES ARE PROCESSED
SINCE WE MUST FILTER BEFORE WE CAN GROUP, THE ORDER OF THESE FILTERING CLAUSES IS IMPORTANT, AND 
WHERE MOST ALWAYS COMES BEFORE HAVING. 
*/

-- USING GROUP BY WITH MULTIPLE FIELDS

SELECT
	BillingCountry,
	BillingCity,
	AVG(TOTAL)
FROM
	invoices
GROUP BY
	BillingCountry, BillingCity
ORDER BY
	BillingCountry


	
	
	
	